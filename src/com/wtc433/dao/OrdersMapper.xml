<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wtc433.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.wtc433.domain.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="shopid" jdbcType="VARCHAR" property="shopid" />
    <result column="buyerusername" jdbcType="VARCHAR" property="buyerusername" />
    <result column="sellerusername" jdbcType="VARCHAR" property="sellerusername" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shopid, buyerusername, sellerusername, count, time, state
  </sql>
  <select id="selectByExample" parameterType="com.wtc433.domain.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wtc433.domain.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wtc433.domain.Orders">
    insert into orders (id, shopid, buyerusername, 
      sellerusername, count, time, 
      state)
    values (#{id,jdbcType=INTEGER}, #{shopid,jdbcType=VARCHAR}, #{buyerusername,jdbcType=VARCHAR}, 
      #{sellerusername,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wtc433.domain.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopid != null">
        shopid,
      </if>
      <if test="buyerusername != null">
        buyerusername,
      </if>
      <if test="sellerusername != null">
        sellerusername,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopid != null">
        #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="buyerusername != null">
        #{buyerusername,jdbcType=VARCHAR},
      </if>
      <if test="sellerusername != null">
        #{sellerusername,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wtc433.domain.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopid != null">
        shopid = #{record.shopid,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerusername != null">
        buyerusername = #{record.buyerusername,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerusername != null">
        sellerusername = #{record.sellerusername,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      shopid = #{record.shopid,jdbcType=VARCHAR},
      buyerusername = #{record.buyerusername,jdbcType=VARCHAR},
      sellerusername = #{record.sellerusername,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wtc433.domain.Orders">
    update orders
    <set>
      <if test="shopid != null">
        shopid = #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="buyerusername != null">
        buyerusername = #{buyerusername,jdbcType=VARCHAR},
      </if>
      <if test="sellerusername != null">
        sellerusername = #{sellerusername,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" >
    update orders
    set state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--  <update id="updateByPrimaryKey" parameterType="com.wtc433.domain.Orders">
    update orders
    set shopid = #{shopid,jdbcType=VARCHAR},
      buyerusername = #{buyerusername,jdbcType=VARCHAR},
      sellerusername = #{sellerusername,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update> 
 -->  <select id="selectByShopid" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from orders where shopid = #{shopid}
  </select>
  
  <select id="findOrderByshopid" resultMap="BaseResultMap">
  	select * from orders where shopid  
    <if test="idsList != null and idsList.size()>0">  
        and shopid in  
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">  
                #{item}  
            </foreach>  
    </if>  
  </select>
  <select id="findOrderByUsername" parameterType="java.lang.String"  resultType="com.wtc433.domain.OrdersExt">
  select shop.id as shopid,shop.price,
  		user.name,
		user.iconpath,
        user.telephone,
        user.college,
        user.dormitory,
        user.floor
		,shop.shopname
        ,shop.state as shopstate
        ,shop.username,
        orders.id as orderid,
        orders.buyerusername,
        orders.sellerusername,
        orders.time,
        orders.state as ordersstate,
        shop.picture
 from shop,orders,user
 where shop.id = orders.shopid and shop.username = user.username and user.username=#{username}
  </select>
    <select id="findOrderBuybuyer" parameterType="java.lang.String"  resultType="com.wtc433.domain.OrdersExt">
  	select shop.id as shopid,shop.price,
  		user.name,
		user.iconpath,
        user.telephone,
        user.college,
        user.dormitory,
        user.floor
		,shop.shopname
        ,shop.state as shopstate
        ,shop.username,
        orders.id as orderid,
        orders.buyerusername,
        orders.sellerusername,
        orders.time,
        orders.state as ordersstate,
        shop.picture
 	from shop,orders,user
 	where shop.id = orders.shopid and shop.username = user.username and orders.buyerusername=#{username}
  </select>
    <select id="findOrdersByshopid" parameterType="java.lang.String"  resultType="com.wtc433.domain.OrdersExt">
  	select shop.id as shopid,shop.price,
  		user.name,
		user.iconpath,
        user.telephone,
        user.college,
        user.dormitory,
        user.floor
		,shop.shopname
        ,shop.state as shopstate
        ,shop.username,
        orders.id as orderid,
        orders.buyerusername,
        orders.sellerusername,
        orders.time,
        orders.state as ordersstate,
        shop.picture
 	from shop,orders,user
 	where shop.id = orders.shopid and shop.username = user.username and orders.`shopid`=#{shopid}
  </select>
	<select id="countSallerByUsername" parameterType="java.lang.String" resultType="java.lang.Long">
		SELECT COUNT(*) FROM orders WHERE sellerusername = #{username} AND state ='交易完成'
	</select>
	<select id="findOrderByCompleteBySaller" parameterType="java.lang.String" resultType="com.wtc433.domain.OrdersExt">
		SELECT shop.id AS shopid,shop.price,
	  		user.name,
			user.iconpath,
	        user.telephone,
	        user.college,
	        user.dormitory,
	        user.floor
			,shop.shopname
	        ,shop.state AS shopstate
	        ,shop.username,
	        orders.id AS orderid,
	        orders.buyerusername,
	        orders.sellerusername,
	        orders.time,
	        orders.state AS ordersstate,
	        shop.picture
 		FROM shop,orders,USER
 		WHERE shop.id = orders.shopid AND shop.username = user.username AND orders.`sellerusername` = #{username} AND orders.`state` ='交易完成'
	</select>
	
		<select id="findOrderByCompleteByBuyer" parameterType="java.lang.String" resultType="com.wtc433.domain.OrdersExt">
		SELECT shop.id AS shopid,shop.price,
	  		user.name,
			user.iconpath,
	        user.telephone,
	        user.college,
	        user.dormitory,
	        user.floor
			,shop.shopname
	        ,shop.state AS shopstate
	        ,shop.username,
	        orders.id AS orderid,
	        orders.buyerusername,
	        orders.sellerusername,
	        orders.time,
	        orders.state AS ordersstate,
	        shop.picture
 		FROM shop,orders,USER
 		WHERE shop.id = orders.shopid AND shop.username = user.username AND orders.`buyerusername` = #{username} AND orders.`state` ='交易完成'
	</select>
   
</mapper>